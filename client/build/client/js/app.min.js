"use strict";var controllerModule=angular.module("powur.controllers",[]),serviceModule=angular.module("powur.services",[]),valueModule=angular.module("powur.values",[]),appModule=angular.module("powur",["ui.router","powur.services","powur.controllers"]).config(["$stateProvider","$urlRouterProvider","$httpProvider",function(e,o,t){t.interceptors.push("AuthInterceptor"),o.otherwise("/"),e.state("home",{url:"/",views:{nav:{templateUrl:"/partials/nav.html",controller:"NavController as nav"},stat:{},main:{templateUrl:"/partials/home.html",controller:"HomeController as home"},activity:{}}}).state("login",{url:"/login",views:{nav:{},stat:{},main:{templateUrl:"/partials/login.html",controller:"LoginController as login"},activity:{}}})}]).run(["$rootScope","$log","$state",function(e,o,t){e.$on("$stateChangeSuccess",function(e,t,r,l,a){o.debug("$stateChangeSuccess"),null==l?o.debug("first time"):"login"==l.name?o.debug("first login"):"login"==t.name&&o.debug("going to state")})}]);
var powur;!function(o){var r;!function(o){var r=function(){function o(r){this.$log=r;var l=this;l.$log.debug(o.ControllerId+":ctor")}return o.ControllerId="HomeController",o}();r.$inject=["$log"],controllerModule.controller(r.ControllerId,r)}(r=o.controllers||(o.controllers={}))}(powur||(powur={}));
var powur;!function(o){var r;!function(o){var r=function(){function o(r){this.$log=r;var l=this;l.$log.debug(o.ControllerId+":ctor")}return o.ControllerId="LoginController",o}();r.$inject=["$log"],controllerModule.controller(r.ControllerId,r)}(r=o.controllers||(o.controllers={}))}(powur||(powur={}));
var powur;!function(o){var r;!function(o){var r=function(){function o(r){this.$log=r;var l=this;l.$log.debug(o.ControllerId+":ctor")}return o.ControllerId="NavController",o}();r.$inject=["$log"],controllerModule.controller(r.ControllerId,r)}(r=o.controllers||(o.controllers={}))}(powur||(powur={}));
var powur;!function(o){var r;!function(o){var r=function(){function o(r){this.$log=r;var l=this;l.$log.debug(o.ControllerId+":ctor")}return o.ControllerId="RootController",o}();r.$inject=["$log"],controllerModule.controller(r.ControllerId,r)}(r=o.controllers||(o.controllers={}))}(powur||(powur={}));
var powur;!function(e){var r;!function(e){var r=function(){function e(r,o,n){this.$log=r,this.$q=o,this.$location=n;var t=this;return t.$log.debug(e.ServiceId+":ctor"),{request:function(r){return t.$log.debug(e.ServiceId+":request"),r||o.when(r)},response:function(r){return t.$log.debug(e.ServiceId+":response"),r||o.when(r)},reponseError:function(r){return t.$log.debug(e.ServiceId+":reponseError"),401===r.status&&n.path("/login"),o.reject(r)}}}return e.ServiceId="AuthInterceptor",e}();r.$inject=["$log","$q","$location"],serviceModule.factory(r.ServiceId,r)}(r=e.services||(e.services={}))}(powur||(powur={}));
//# sourceMappingURL=data:application/json;base64,